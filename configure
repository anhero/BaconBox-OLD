#! /bin/bash

# Sanity checks

CMAKE=$(which cmake)
if [ "${CMAKE}" == "" ]; then
	echo "CMake is not correctly installed and is necessary to build this project." && exit 1
fi

LIBBUILDTOOL=$(which libbuildtool)
if [ "${LIBBUILDTOOL}" == "" ]; then
	echo "LibBuildTool is not correctly installed and is necessary to build the dependencies of this project." && exit 1
fi

# Help function
function print_help() {
	#@ function print_help
	#@ Prints help for libbuildtool.

	local this="$(basename ${0})"
	echo "
Usage:
     -t | --target <name>
            Configures the project for the <name> target.
            Currently supported targets:
                - current (default)
                - iphoneOS (You must specify a sdk version like this:
                    \`./configure -t iphoneOS 4.3\`
                  where 4.3 is the sdk version number.
                - iphoneSimulator (You must specify a sdk version like this:
                    \`./configure -t iphoneSimulator 4.3\`
                  where 4.3 is the sdk version number.

     --prefix <path>
	        Specify where to install files when calling make install.

     -G     Specify which Cmake generator to use
	"
}

# Initializing parameters array
params=( )

# Parameters parsing
while [ $# -gt 0 ];do
	case "$1" in
		"--help"|"-h"|"-?")
			print_help
			exit 0
			;;
		"--prefix")
			shift;
			PREFIX=$1
			;;
		"--target"|"-t")
			shift;
			target=$1
			if [ "${target}" == "iphoneOS" -o "${target}" == "iphoneSimulator" ] ; then
				shift;
				if [ "${1}" == "" ]; then
					echo "This target need a sdk version number. See ./configure --help for usage." && exit 1
				fi
				export SDKVER="${1}"
			fi
			;;
		*)
			params=( "${params[@]}" "${1}" )
		esac
	shift;
done

#Defining default target, if not set
if [ -z "${target}" ]; then
	target="SDL"
fi
#Adding target to cache entries.
params=( ${params[@]} "-D${target}=1" )

# Defining the prefix for cmake
if [[ -n "${PREFIX-}" ]]; then
	params=( "${params[@]}" "-DCMAKE_INSTALL_PREFIX=$PREFIX" )
fi

mkdir -p build
cp ./script/CMake/Makefile/Makefile .


if [[ -n "${VERBOSE-}" && "${VERBOSE-}" != "0" ]]; then
	echo "Final parameters list to be passed to cmake: "
	for param in "${params[@]}"; do
		echo " > ""$param"
	done
fi

configurePath="./script/CMake/configureScript"

if [[ "${target}" == "iphoneOS" ]]; then
	"${configurePath}/configure-iphone" "${params[@]}"
elif [[ "${target}" == "iphoneSimulator" ]]; then
	"${configurePath}/configure-iphone-simulator" "${params[@]}"
elif [[ "${target}" == "android" ]]; then
	"${configurePath}/configure-android" "${params[@]}"
else
	"${configurePath}/configure-current" "${params[@]}"
fi
