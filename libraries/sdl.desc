#!/bin/bash

_name="SDL"
_license="zlib"
_version="1.3.0-50bf98210aae"
_archive="${_name}-${_version}.tar.gz"
_archive_url="http://anhero.net/stuff/${_archive}"
_hash="33426d99b598a3d65a37db479f920142"

load_base http.fetch
load_base configuremakemake.build

if [[ "$(uname -s)" != "Darwin" ]]; then
	config_cmdline="--enable-shared=no"
fi

if [ -n "${target_crosscompile-}" ]; then
	if [[ -n "${configure_host-}" ]]; then
		config_cmdline=$config_cmdline" --host=${configure_host}"
	fi
fi

copy_function build __build

function build() {

	print_info Patching SDL
	cd "${lib_workdir}/${_name}-${_version}/"

	#Hack to remove Error: Couldn't open stream
	echo Patching SDL_x11events.c to remove warnings...
	patch -p1 <<'EOF'
--- a/src/video/x11/SDL_x11events.c	2011-04-08 16:07:04.000000000 -0400
+++ b/src/video/x11/SDL_x11events.c	2011-04-29 21:35:23.000000000 -0400
@@ -558,8 +558,8 @@
 	  printf("No driver data\n");
 	  continue;
 	}
-	if(data->eventStream <= 0) 
-	    printf("Error: Couldn't open stream\n");
+	//if(data->eventStream <= 0) 
+	//    printf("Error: Couldn't open stream\n");
 	rd = read(data->eventStream, ev, size * 64);
 	//printf("Got %i/%i bytes\n",rd,size);
 	if(rd >= size) {
EOF

#PATCH X11
	echo "Patching to fix a change in recent X11."
	#WRONG PATCH
# 	patch -p1 <<'EOF'
#--- a/src/video/x11/SDL_x11dyn.c	2012-06-14 23:15:44.252239226 -0400
#+++ b/src/video/x11/SDL_x11dyn.c	2012-06-14 23:20:30.704455392 -0400
#@@ -38,7 +38,7 @@
# typedef struct
# {
#     void *lib;
#-    const char *libname;
#+    _Xconst char *libname;
# } x11dynlib;
#EOF
#	patch -p1 <<'EOF'
#--- a/src/video/x11/SDL_x11sym.h	2012-06-14 23:29:48.528946534 -0400
#+++ b/src/video/x11/SDL_x11sym.h	2012-06-14 23:30:11.275524489 -0400
#@@ -105,7 +105,7 @@
# SDL_X11_SYM(int,XUnmapWindow,(Display* a,Window b),(a,b),return)
# SDL_X11_SYM(int,XWarpPointer,(Display* a,Window b,Window c,int d,int e,unsigned int f,unsigned int g,int h,int i),(a,b,c,d,e,f,g,h,i),return)
# SDL_X11_SYM(VisualID,XVisualIDFromVisual,(Visual* a),(a),return)
#-SDL_X11_SYM(XExtDisplayInfo*,XextAddDisplay,(XExtensionInfo* a,Display* b,char* c,XExtensionHooks* d,int e,XPointer f),(a,b,c,d,e,f),return)
#+SDL_X11_SYM(XExtDisplayInfo*,XextAddDisplay,(XExtensionInfo* a,Display* b,_Xconst char* c,XExtensionHooks* d,int e,XPointer f),(a,b,c,d,e,f),return)
# SDL_X11_SYM(XExtensionInfo*,XextCreateExtension,(void),(),return)
# SDL_X11_SYM(void,XextDestroyExtension,(XExtensionInfo* a),(a),)
# SDL_X11_SYM(XExtDisplayInfo*,XextFindDisplay,(XExtensionInfo* a,Display* b),(a,b),return)
#EOF

 
 #ifndef SDL_VIDEO_DRIVER_X11_DYNAMIC

	__build
}

# vim: ft=sh
